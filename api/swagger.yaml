openapi: 3.0.0
info:
  title: Sky Explorer Web Admin App
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /api/v1/login:
    post:
      summary: User Admin Login
      description: Authenticate a user admin and generate an access token.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The user's email address.
                password:
                  type: string
                  description: The user's password.
              required:
                - email
                - password
      responses:
        '200':
          description: User authenticated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message.
                  token:
                    type: string
                    description: The generated access token.
                  name:
                    type: string
                    description: The user's name.
        '401':
          description: Invalid password.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
  /api/v1/forget-password:
    post:
      summary: Forget Password Request
      description: Initiates a password reset process by sending a reset link to the user's email.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The user's email address.
              required:
                - email
      responses:
        '200':
          description: Email sent successfully with reset link.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message.
                  token:
                    type: string
                    description: The token for resetting the password.
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
        '500':
          description: Error when sending email.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
  /api/v1/set-password/{token}:
    put:
      summary: Reset Password with Token
      description: Resets the user's password using the provided token.
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: The token for resetting the password.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: The new password.
                confirmPassword:
                  type: string
                  description: Confirm the new password.
              required:
                - password
                - confirmPassword
      responses:
        '200':
          description: Password reset successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message.
        '400':
          description: Invalid password or confirmation mismatch.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
        '404':
          description: User not found or invalid token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
  /api/v1/auth:
    get:
      summary: Get Authenticated User Info
      description: Retrieves information about the authenticated user.
      responses:
        '200':
          description: Authenticated user information retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                description: Authenticated user information.
      security:
          - bearerAuth: []
  /api/v1/users:
    get:
      summary: Get All Users
      description: |
        Retrieves a list of all users along with their roles.
      responses:
        '200':
          description: Successfully retrieved the list of all users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message.
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: User ID.
                        email:
                          type: string
                          description: User's email address.
                        name:
                          type: string
                          description: User's name account.
                        password:
                          type: string
                          description: User's password information.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message.
      security:
          - bearerAuth: []
    post:
      summary: User Registration
      description: |
        Registers a new user account.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The user's name.
                email:
                  type: string
                  format: email
                  description: The user's email address.
                password:
                  type: string
                  description: The user's password.
              required:
                - password
                - name
                - email
      responses:
        '201':
          description: Successfully registered a new user account.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message.
                  userInformation:
                    type: object
                    description: Information about the registered user.
        '400':
          description: Invalid email or email already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
      security:
          - bearerAuth: []
  /api/v1/users/{id}:
    get:
      summary: Get User by ID
      description: |
        Retrieves user information by user ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the user to retrieve.
      responses:
        '201':
          description: Successfully retrieved user information by ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message.
                  data:
                    type: object
                    description: Information about the user.
        '404':
          description: User not found by the provided ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
      security:
          - bearerAuth: []
    put:
      summary: Update User by ID
      description: |
        Updates user information by user ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the user to update.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The updated email address.
                password:
                  type: string
                  description: The updated password.
                name:
                  type: string
                  description: The updated name.
      responses:
        '200':
          description: Successfully updated user information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message.
        '400':
          description: Invalid email, password, or name.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
        '401':
          description: New password is the same as the old password.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
        '404':
          description: User not found by the provided ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
      security:
          - bearerAuth: []
    delete:
      summary: Delete User by ID
      description: |
        Deletes a user by user ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the user to delete.
      responses:
        '200':
          description: Successfully deleted the user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message.
        '404':
          description: User not found by the provided ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code.
                  message:
                    type: string
                    description: Error message.
      security:
          - bearerAuth: []